name: Pre-commit
description: GitHub Action for running pre-commit hooks against the repository. Conditionally installs tools needed for the Action to be able to perform its duties such as `npm`, `pre-commit`, etc.
inputs:
  config-file:
    required: true
    description: The config file to present to commitlint-github-action
    default: .commitlintrc.yaml
  turo-conventional-commit:
    required: true
    description: Set this to "false" to customize conventional commit configuration
    default: "true"
  only-changed:
    required: false
    description: >-
      Set this to "true" to only run pre-commit against changed files, and not
      the entire repository

runs:
  using: composite
  steps:
    - name: Set node.js version
      if: hashFiles('.node-version') == ''
      shell: bash
      run: echo '16.14.2' > .node-version
    - name: Set Python version
      if: hashFiles('.python-version') == ''
      shell: bash
      run: echo '3.10.2' > .python-version
    - name: Find pre-commit
      shell: bash
      run: |
        # Finding pre-commit
        # This will set an environment variable we can use to conditionally
        # install pre-commit if needed and toggle how the action runs.
        echo "PRE_COMMIT_BIN=$(command -v pre-commit)" >> $GITHUB_ENV
    - name: Setup python
      # Only run this if we don't already have a pre-commit on the PATH
      if: env.PRE_COMMIT_BIN == null
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.2
    - name: Install tools
      # This will skip the (slow) pyenv install if we triggered the above
      uses: open-turo/action-setup-tools@v1
    - name: Commitlint
      uses: ./commitlint
    # Collect file changes
    - name: Find changed files
      if: inputs.only-changed
      uses: trilom/file-changes-action@v1.2.4
      id: file_changes
      with:
        output: " "
    # Export changed file names for use in pre-commit action
    - name: Limit pre-commit to changed files
      if: inputs.only-changed
      shell: bash
      run: |
        PRE_COMMIT_FILES="--files ${{ steps.file_changes.outputs.files}}"
        echo PRE_COMMIT_FILES="$PRE_COMMIT_FILES" >> $GITHUB_ENV
    # If we aren't only looking at changed files, then export the --all-files arg
    - name: Run pre-commit against all files
      if: inputs.only-changed != 'true'
      shell: bash
      run: echo PRE_COMMIT_FILES="--all-files" >> $GITHUB_ENV
    - name: Pre-commit
      # Same as above, this will install and run pre-commit for us
      if: env.PRE_COMMIT_BIN == null
      uses: pre-commit/action@v3.0.0
      with:
        extra_args: ${{ env.PRE_COMMIT_FILES }}
    - name: Pre-commit
      # Run pre-commit directly if we found it on the PATH
      if: env.PRE_COMMIT_BIN != null
      shell: bash
      run: pre-commit run --show-diff-on-failure --color=always ${{ env.PRE_COMMIT_FILES }}
